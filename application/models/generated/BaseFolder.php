<?php

/**
 * BaseFolder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $parent
 * @property string $name
 * @property string $path
 * @property string $description
 * @property integer $ptid
 * @property PermissionType $PermissionType
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $Files
 * @property Doctrine_Collection $Permissions
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFolder extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('folder');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('parent', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ptid', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PermissionType', array(
             'local' => 'ptid',
             'foreign' => 'ptid'));

        $this->hasMany('User as Users', array(
             'refClass' => 'Permission',
             'local' => 'folder_id',
             'foreign' => 'user_id'));

        $this->hasMany('File as Files', array(
             'local' => 'id',
             'foreign' => 'fid'));

        $this->hasMany('Permission as Permissions', array(
             'local' => 'id',
             'foreign' => 'folder_id'));
    }
}